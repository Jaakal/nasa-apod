{"version":3,"sources":["actions/types.js","reducers/medias.js","utility/date.js","reducers/mediasFilter.js","reducers/index.js","components/MediasForm.js","actions/medias.js","components/Loader.js","components/Media.js","components/MediasList.js","components/Logo.js","components/MediaInfo.js","utility/fetchMedias.js","App.js","index.js"],"names":["ADD_MEDIAS_INFO","MODIFY_FILTER","shuffle","array","i","j","temp","length","Math","floor","random","initialState","mediasInfo","loading","reducer","state","payload","type","getDateDaysAgo","daysAgo","DAYS_IN_A_MONTH","time","Date","year","getFullYear","month","getMonth","day","getDate","abs","toString","string","yearString","monthString","dayString","parseInt","parseDateString","dateString","substring","indexOf","lastIndexOf","isFirstDateSmaller","date1","date2","defaultFilter","startDate","endDate","category","mediasFilter","filter","combineReducers","medias","CATEGORIES","name","url","TIME_RANGE","MAX","MIN","Object","freeze","connect","dispatch","modifyFilter","useState","setStartDate","setEndDate","setCategory","handleChange","event","target","id","value","className","htmlFor","onChange","min","max","map","index","Loader","Media","media","mediaType","title","onClick","mediaRef","useRef","setLoading","mediaLoaded","useCallback","useEffect","mediaElement","current","addEventListener","removeEventListener","style","opacity","src","ref","alt","setMedia","filteredMedias","setFilteredMedias","mediaInfo","date","filterMedias","Logo","headline","MediaInfo","explanation","setTimeout","window","scrollTo","titleContainer","fetchMediasInfo","addMediasInfo","apiKey","promises","queryDate","promise","fetch","then","response","json","push","replace","toLowerCase","media_type","photos","camera","full_name","rover","img_src","caption","image","catch","error","console","Promise","all","store","createStore","rootReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iVAAaA,EAAkB,kBAClBC,EAAgB,gBCGvBC,EAAU,SAAAC,GACd,IAAIC,EAAGC,EAAGC,EAEV,IAAKF,EAAID,EAAMI,OAAS,EAAGH,EAAI,EAAGA,GAAK,EACrCC,EAAIG,KAAKC,MAAMD,KAAKE,UAAYN,EAAI,IACpCE,EAAOH,EAAMC,GACbD,EAAMC,GAAKD,EAAME,GACjBF,EAAME,GAAKC,EAGb,OAAOH,GAGHQ,EAAe,CACnBC,WAAY,GACZC,SAAS,GAeIC,EAZC,WAAoC,IAAnCC,EAAkC,uDAA1BJ,EAAcK,EAAY,uCACjD,OAAQA,EAAQC,MACd,KAAKjB,EACH,MAAO,CACLY,WAAaV,EAAQc,EAAQJ,YAC7BC,SAAS,GAEb,QACE,OAAOE,I,QC9BPG,EAAiB,SAAAC,GACrB,IAAMC,EAAkB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAE/DC,EAAO,IAAIC,KACbC,EAAOF,EAAKG,cACZC,EAAQJ,EAAKK,WACbC,EAAMN,EAAKO,UAQf,IANIL,EAAO,IAAM,IACXA,EAAO,MAAQ,GAAKA,EAAO,MAAQ,IACrCH,EAAgB,GAAK,KAIlBD,EAAU,GAEfA,GADAQ,GAAOR,GACS,EAAIX,KAAKqB,IAAIF,GAAO,EAEhCA,EAAM,KAGO,KAFfF,GAAS,KAGPF,GAAQ,EACRE,EAAQ,IAGVE,EAAMP,EAAgBK,IAc1B,OAVIE,EAAM,KACRA,EAAG,WAAOA,EAAIG,cAGhBL,GAAS,GAEG,KACVA,EAAK,WAAOA,EAAMK,aAGZ,CACNC,OAAO,GAAD,OAAKR,EAAL,YAAaE,EAAb,YAAsBE,GAC5BK,WAAYT,EAAKO,WACjBG,YAAaR,EAAMK,WACnBI,UAAWP,EAAIG,WACfP,KAAMY,SAASZ,EAAM,IACrBE,MAAOU,SAASV,EAAO,IACvBE,IAAKQ,SAASR,EAAK,MAIjBS,EAAkB,SAAAC,GAAU,MAAK,CACrCd,KAAMY,SAASE,EAAWC,UAAU,EAAGD,EAAWE,QAAQ,MAAO,IACjEd,MAAOU,SAASE,EAAWC,UAAUD,EAAWE,QAAQ,KAAO,EAAGF,EAAWG,YAAY,MAAO,IAChGb,IAAKQ,SAASE,EAAWC,UAAUD,EAAWG,YAAY,KAAO,GAAI,MAGjEC,EAAqB,SAACC,EAAOC,GACjC,GAAID,EAAMnB,KAAOoB,EAAMpB,KACrB,OAAO,EACP,GAAImB,EAAMnB,OAASoB,EAAMpB,KAAM,CAC/B,GAAImB,EAAMjB,MAAQkB,EAAMlB,MACtB,OAAO,EACP,GAAIiB,EAAMjB,QAAUkB,EAAMlB,OACtBiB,EAAMf,KAAOgB,EAAMhB,IACrB,OAAO,EAKb,OAAO,GChEHiB,EAAgB,CACpBC,UAAW,CACTtB,KAAMY,SAASjB,EAAe,GAAGK,KAAM,IACvCE,MAAOU,SAASjB,EAAe,GAAGO,MAAO,IACzCE,IAAKQ,SAASjB,EAAe,GAAGS,IAAK,KAEvCmB,QAAS,CACPvB,KAAMY,SAASjB,EAAe,GAAGK,KAAM,IACvCE,MAAOU,SAASjB,EAAe,GAAGO,MAAO,IACzCE,IAAKQ,SAASjB,EAAe,GAAGS,IAAK,KAEvCoB,SAAU,OAYGC,EATM,WAAqC,IAApCjC,EAAmC,uDAA3B6B,EAAe5B,EAAY,uCACvD,OAAQA,EAAQC,MACd,KAAKhB,EACH,OAAO,2BAAKc,GAAUC,EAAQiC,QAChC,QACE,OAAOlC,ICpBEmC,cAAgB,CAAEC,SAAQH,iB,OCInCI,G,kBAAa,CACjB,CACEC,KAAM,uBACNC,IAAK,wBAEP,CACED,KAAM,oBACNC,IAAK,qBAEP,CACED,KAAM,qCACNC,IAAK,wCAIHC,EAAa,CACjBC,IAAKtC,EAAe,GAAGa,OACvB0B,IAAKvC,EAAe,GAAGa,QAEzB2B,OAAOC,OAAOJ,GAEd,IAwEeK,eAXS,SAAA7C,GAAK,MAAK,CAChCkC,OAAQlC,EAAMiC,iBAGW,SAAAa,GAAQ,MAAK,CACtCC,aAAc,SAAAb,GAAM,OAClBY,ECvFwB,SAAAZ,GAAM,MAAK,CACrChC,KAAMhB,EACNgD,UDsFIa,CAAab,QAIJW,EAxEI,SAAC,GAA8B,IAA5BX,EAA2B,EAA3BA,OAAQa,EAAmB,EAAnBA,aAAmB,EACbC,mBAAS,GAAD,OAAId,EAAOJ,UAAUtB,KAArB,YAA6B0B,EAAOJ,UAAUpB,MAA9C,YAAuDwB,EAAOJ,UAAUlB,MADnE,mBACxCkB,EADwC,KAC7BmB,EAD6B,OAEjBD,mBAAS,GAAD,OAAId,EAAOH,QAAQvB,KAAnB,YAA2B0B,EAAOH,QAAQrB,MAA1C,YAAmDwB,EAAOH,QAAQnB,MAFzD,mBAExCmB,EAFwC,KAE/BmB,EAF+B,OAGfF,mBAASd,EAAOF,UAHD,mBAGxCA,EAHwC,KAG9BmB,EAH8B,KAKzCC,EAAe,SAAAC,GACnB,OAAQA,EAAMC,OAAOC,IACnB,IAAK,aACHN,EAAaI,EAAMC,OAAOE,OAC1BT,EAAa,CACXjB,UAAWT,EAAgBgC,EAAMC,OAAOE,SAE1C,MACF,IAAK,WACHN,EAAWG,EAAMC,OAAOE,OACxBT,EAAa,CACXhB,QAASV,EAAgBgC,EAAMC,OAAOE,SAExC,MACF,IAAK,WACHL,EAAYE,EAAMC,OAAOE,OACzBT,EAAa,CACXf,SAAUqB,EAAMC,OAAOE,UAQ/B,OACE,uBAAMC,UAAU,aAAhB,UACE,qBAAKA,UAAU,gBAAf,SACE,wBAAOC,QAAQ,aAAf,uBAEE,uBAAOxD,KAAK,OAAOyD,SAAUP,EAAcI,MAAO1B,EAAWyB,GAAG,aAAajB,KAAK,aAAasB,IAAKpB,EAAWE,IAAKmB,IAAK9B,SAI7H,qBAAK0B,UAAU,gBAAf,SACE,wBAAOC,QAAQ,WAAf,qBAEE,uBAAOxD,KAAK,OAAOyD,SAAUP,EAAcI,MAAOzB,EAASwB,GAAG,WAAWjB,KAAK,WAAWsB,IAAK9B,EAAW+B,IAAKrB,EAAWC,WAI7H,qBAAKgB,UAAU,iBAAf,SACE,yBAAQE,SAAUP,EAAcG,GAAG,WAAWC,MAAOxB,EAArD,UACE,wCAAY,OACXK,EAAWyB,KAAI,SAAC9B,EAAU+B,GAAX,OAAqB,iCAAqB/B,EAASM,MAAjByB,iBEpE7CC,G,kBAPA,kBACb,qBAAKP,UAAU,wCAAf,SACE,qBAAKA,UAAU,mBAAf,SACE,8BC8CSQ,EA9CD,SAAC,GASR,IARLC,EAQI,EARJA,MAQI,IAPJA,MACElC,EAME,EANFA,SACAO,EAKE,EALFA,IACA4B,EAIE,EAJFA,UACAC,EAGE,EAHFA,MAEFC,EACI,EADJA,QAEMC,EAAWC,iBAAO,MADpB,EAG0BvB,oBAAS,GAHnC,mBAGGlD,EAHH,KAGY0E,EAHZ,KAKEC,EAAcC,uBAAY,WAC9BF,GAAW,KACV,CAACA,IAEJG,qBAAU,WACR,IAAMC,EAAeN,EAASO,QAE9B,OADAD,EAAaE,iBAAiB,OAAQL,GAC/B,kBAAMG,EAAaG,oBAAoB,OAAQN,MACrD,CAACA,IAEJE,qBAAU,WACH7E,IACHwE,EAASO,QAAQG,MAAMC,QAAU,KAClC,CAACnF,IAEJ,IAAM8E,EAA6B,UAAdT,EACnB,wBAAQe,IAAK3C,EAAKkB,UAAU,QAAQ0B,IAAKb,EAAUc,IAAKpD,EAASM,KAAM8B,MAAOA,EAAM9B,OACpF,qBAAK4C,IAAK3C,EAAKkB,UAAU,QAAQ0B,IAAKb,EAAUc,IAAKpD,EAASM,OAEhE,OACE,sBAAKmB,UAAU,gBAAgBY,QAAS,kBAAMA,EAAQH,IAAtD,UACGpE,GAAW,cAAC,EAAD,IACX8E,MCQQ/B,eALS,SAAA7C,GAAK,MAAK,CAChCoC,OAAQpC,EAAMoC,OACdF,OAAQlC,EAAMiC,gBAGDY,EA/BI,SAAC,GAAkD,IAAtChD,EAAqC,EAA/CuC,OAAUvC,WAAcqC,EAAuB,EAAvBA,OAAQmD,EAAe,EAAfA,SAAe,EACvBrC,mBAAS,IADc,mBAC5DsC,EAD4D,KAC5CC,EAD4C,KAGnEZ,qBAAU,WACRY,EAdiB,SAAC1F,EAAYqC,GAChC,OAAOrC,EAAWqC,QAAO,SAAAsD,GACvB,OAAwB,QAApBtD,EAAOF,UAAsBE,EAAOF,WAAawD,EAAUxD,SAASM,QACpEZ,EAAmB8D,EAAUC,KAAMvD,EAAOJ,aACzCJ,EAAmBQ,EAAOH,QAASyD,EAAUC,SAUhCC,CAAa7F,EAAYqC,MAC1C,CAACrC,EAAYqC,IAEhB,IAAMmC,EAAU,SAAAH,GAAK,OAAImB,EAASnB,IAElC,OACE,sBAAKT,UAAU,cAAf,UACE,yBACA,yBACA,yBACA,yBACC6B,EAAexB,KAAI,SAAAI,GAAK,OAAI,cAAC,EAAD,CAAuBA,MAAOA,EAAOG,QAASA,GAAlCH,EAAM3B,cCdtCoD,G,YAhBF,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACd,OACE,sBAAKnC,UAAU,OAAf,UACE,sBAAMA,UAAU,YAAhB,kBACA,uBAAMA,UAAU,YAAhB,UACE,sBAAMA,UAAU,OAAhB,uBACCmC,UC6CMC,EA/CG,SAAC,GASZ,IARL3B,EAQI,EARJA,MAQI,IAPJA,MACElC,EAME,EANFA,SACAoC,EAKE,EALFA,MACAqB,EAIE,EAJFA,KACAK,EAGE,EAHFA,YAEFT,EACI,EADJA,SAEAV,qBAAU,WACRoB,YAAW,kBAAMC,OAAOC,SAAS,EAAG,KAAI,OACvC,IAEH,IAAMC,EACJ,sBAAKzC,UAAU,2BAAf,UACE,uDACA,sBAAMA,UAAU,QAAhB,kBACA,qDAIJ,OACE,sBAAKA,UAAU,iBAAf,UACE,cAAC,EAAD,CAAMmC,SAA4B,uCAAlB5D,EAASM,KAAgD4D,EAAiBlE,EAASM,OACnG,sBAAKmB,UAAU,eAAf,UACE,yBACA,yBACA,yBACA,yBACA,qBAAKA,UAAU,2BAAf,SACE,cAAC,EAAD,CAAOS,MAAOA,EAAOG,QAAS,iBAEhC,qBAAKZ,UAAU,QAAf,SAAwBW,EAAM9B,OAC9B,qBAAKmB,UAAU,OAAf,SAAuBgC,EAAKzE,SAC5B,qBAAKyC,UAAU,cAAf,SAA8BqC,IAC9B,wBAAQ5F,KAAK,SAASmE,QAAS,kBAAMgB,EAAS,OAA9C,8BCyDOc,EApGS,SAACC,GAUvB,IATA,IAAM/D,EAAa,CACjB,CAAEC,KAAM,uBAAwBC,IAAK,wBACrC,CAAED,KAAM,oBAAqBC,IAAK,qBAClC,CAAED,KAAM,qCAAsCC,IAAK,uCAE/C8D,EAAS,2CACTC,EAAW,GACXzG,EAAa,GARsB,WAUhCR,GACP,IAXuC,eAW9BC,GACP,IAAMiH,EAAYpG,EAAeb,GAC7BiD,OAAG,EAEP,OAAQF,EAAWhD,GAAGiD,MACpB,IAAK,uBACHC,EAAG,mDAA+CgE,EAAUvF,OAAzD,oBAA2EqF,GAC9E,MACF,IAAK,oBACH9D,EAAG,qFAAiFgE,EAAUvF,OAA3F,2BAAoHqF,GACvH,MACF,IAAK,qCACH9D,EAAG,qDAAiDgE,EAAUvF,OAA3D,oBAA6EqF,GAMpF,IAAMG,EAAUC,MAAMlE,GAAKmE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAClDF,MAAK,SAAAE,GACJ,OAAQvE,EAAWhD,GAAGiD,MACpB,IAAK,uBACHzC,EAAWgH,KAAK,CACdtD,GAAI1D,EAAWL,OAAOuB,WACtB0E,KAAMc,EACNT,YAAac,EAAKd,YAClB1B,MAAO,CACL9B,KAAMsE,EAAKxC,MACX7B,IAAKqE,EAAKxC,MAAM0C,QAAQ,KAAM,KAAKC,eAErCxE,IAAKqE,EAAKrE,IACVP,SAAUK,EAAWhD,GACrB8E,UAAWyC,EAAKI,aAGlB,MACF,IAAK,oBACD,GAA2B,IAAvBJ,EAAKK,OAAOzH,OAAc,MAE9B,IAAMuE,EAAQtE,KAAKC,MAAMD,KAAKE,SAAWiH,EAAKK,OAAOzH,QAErDK,EAAWgH,KAAK,CACdtD,GAAI1D,EAAWL,OAAOuB,WACtB0E,KAAMc,EACNT,YAAac,EAAKK,OAAOlD,GAAOmD,OAAOC,UACvC/C,MAAO,CACL9B,KAAMsE,EAAKK,OAAOlD,GAAOqD,MAAM9E,KAC/BC,IAAI,GAAD,OAAKqE,EAAKK,OAAOlD,GAAOqD,MAAM9E,KAAKwE,QAAQ,KAAM,KAAKC,cAAtD,YAAuElH,EAAWL,SAEvF+C,IAAKqE,EAAKK,OAAOlD,GAAOsD,QACxBrF,SAAUK,EAAWhD,GACrB8E,UAAW,UAIf,MACF,IAAK,qCACD,GAAoB,IAAhByC,EAAKpH,OAAc,MAEvB,IAAMuE,EAAQtE,KAAKC,MAAMD,KAAKE,SAAWiH,EAAKpH,QAE9CK,EAAWgH,KAAK,CACdtD,GAAI1D,EAAWL,OAAOuB,WACtB0E,KAAMc,EACNT,YAAac,EAAKU,QAClBlD,MAAO,CACL9B,KAAM,eACNC,IAAI,gBAAD,OAAkB1C,EAAWL,SAElC+C,IAAI,8CAAD,OAAgDgE,EAAUtF,WAA1D,YAAwEsF,EAAUrF,YAAlF,YAAiGqF,EAAUpF,UAA3G,gBAA4HyF,EAAK7C,GAAOwD,MAAxI,QACHvF,SAAUK,EAAWhD,GACrB8E,UAAW,cASpBqD,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,MAEhCnB,EAASO,KAAKL,IAlFPlH,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAAI,EAAvBA,IADFD,EAAI,EAAGA,EAAIgD,EAAW7C,OAAQH,GAAK,EAAI,EAAvCA,GAuFTsI,QAAQC,IAAItB,GAAUI,MAAK,kBAAMN,EAAcvG,OCzClCgD,eAZS,SAAA7C,GAAK,MAAK,CAChCoC,OAAQpC,EAAMoC,WAGW,SAAAU,GAAQ,MAAK,CACtCsD,cAAe,SAAApG,GACb8C,EP/CwC,CAC1C5C,KAAMjB,EACNY,WO8CkBG,QAKL6C,EA1CH,SAAC,GAA4C,IAAhC/C,EAA+B,EAAzCsC,OAAUtC,QAAWsG,EAAoB,EAApBA,cAAoB,EAC5BpD,mBAAS,MADmB,mBAC/CkB,EAD+C,KACxCmB,EADwC,KAQtD,OALAV,qBAAU,WACJ7E,GACFqG,EAAgBC,KACjB,CAACtG,EAASsG,IAGX,mCACGtG,EAAU,cAAC,EAAD,IACT,qBAAK2D,UAAU,MAAf,SACGS,EAAQ,cAAC,EAAD,CAAWA,MAAOA,EAAOmB,SAAUA,IAC1C,qCACE,cAAC,EAAD,CAAMO,SAAU,yBAChB,cAAC,EAAD,IACA,cAAC,EAAD,CAAYP,SAAUA,cCvB9BwC,EAAQC,YAAYC,GAE1BC,IAASC,OACP,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACE,cAAC,IAAMK,WAAP,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.f7e8e97b.chunk.js","sourcesContent":["export const ADD_MEDIAS_INFO = 'ADD_MEDIAS_INFO'\nexport const MODIFY_FILTER = 'MODIFY_FILTER'","import {\n  ADD_MEDIAS_INFO\n} from '../actions/types'\n\nconst shuffle = array => {\n  let i, j, temp\n\n  for (i = array.length - 1; i > 0; i -= 1) {\n    j = Math.floor(Math.random() * (i + 1))\n    temp = array[i];\n    array[i] = array[j]\n    array[j] = temp\n  }\n\n  return array\n};\n\nconst initialState = {\n  mediasInfo: [],\n  loading: true\n}\n\nconst reducer = (state = initialState, payload) => {\n  switch (payload.type) {\n    case ADD_MEDIAS_INFO:\n      return {\n        mediasInfo:  shuffle(payload.mediasInfo),\n        loading: false\n      }\n    default:\n      return state\n  }\n}\n\nexport default reducer\n","const getDateDaysAgo = daysAgo => {\n  const DAYS_IN_A_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n  const time = new Date();\n  let year = time.getFullYear();\n  let month = time.getMonth();\n  let day = time.getDate();\n\n  if (year % 4 === 0) {\n    if (year % 100 !== 0 || year % 400 === 0) {\n      DAYS_IN_A_MONTH[1] = 29;\n    }\n  }\n\n  while (daysAgo > 0) {\n    day -= daysAgo;\n    daysAgo = day < 1 ? Math.abs(day) : 0;\n\n    if (day < 1) {\n      month -= 1;\n\n      if (month === -1) {\n        year -= 1;\n        month = 11;\n      }\n\n      day = DAYS_IN_A_MONTH[month];\n    }\n  }\n\n  if (day < 10) {\n    day = `0${day.toString()}`;\n  }\n\n  month += 1;\n\n  if (month < 10) {\n    month = `0${month.toString()}`;\n  }\n\n  return ({\n    string: `${year}-${month}-${day}`,\n    yearString: year.toString(),\n    monthString: month.toString(),\n    dayString: day.toString(),\n    year: parseInt(year, 10),\n    month: parseInt(month, 10),\n    day: parseInt(day, 10),\n  });\n};\n\nconst parseDateString = dateString => ({\n  year: parseInt(dateString.substring(0, dateString.indexOf('-')), 10),\n  month: parseInt(dateString.substring(dateString.indexOf('-') + 1, dateString.lastIndexOf('-')), 10),\n  day: parseInt(dateString.substring(dateString.lastIndexOf('-') + 1), 10),\n});\n\nconst isFirstDateSmaller = (date1, date2) => {\n  if (date1.year > date2.year) {\n    return false;\n  } if (date1.year === date2.year) {\n    if (date1.month > date2.month) {\n      return false;\n    } if (date1.month === date2.month) {\n      if (date1.day >= date2.day) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n};\n\nexport { getDateDaysAgo, parseDateString, isFirstDateSmaller };\n","import {\n  MODIFY_FILTER\n} from '../actions/types'\n\nimport { getDateDaysAgo } from '../utility/date';\n\nconst defaultFilter = {\n  startDate: {\n    year: parseInt(getDateDaysAgo(5).year, 10),\n    month: parseInt(getDateDaysAgo(5).month, 10),\n    day: parseInt(getDateDaysAgo(5).day, 10),\n  },\n  endDate: {\n    year: parseInt(getDateDaysAgo(1).year, 10),\n    month: parseInt(getDateDaysAgo(1).month, 10),\n    day: parseInt(getDateDaysAgo(1).day, 10),\n  },\n  category: 'All',\n}\n\nconst mediasFilter = (state = defaultFilter, payload) => {\n  switch (payload.type) {\n    case MODIFY_FILTER:\n      return { ...state, ...payload.filter }\n    default:\n      return state\n  }\n}\n\nexport default mediasFilter","import { combineReducers } from 'redux';\n\nimport medias from './medias';\nimport mediasFilter from './mediasFilter';\n\nexport default combineReducers({ medias, mediasFilter });\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\n\nimport '../css/MediasForm.css'\n\nimport { getDateDaysAgo, parseDateString } from '../utility/date'\nimport { modifyFilter } from '../actions/medias'\n\nconst CATEGORIES = [\n  {\n    name: 'A Picture of the Day',\n    url: 'a-picture-of-the-day'\n  },\n  {\n    name: 'Mars Rover Photos',\n    url: 'mars-rover-photos'\n  },\n  {\n    name: 'Earth Polychromatic Imaging Camera',\n    url: 'earth-polychromatic-imaging-camera'\n  }\n]\n\nconst TIME_RANGE = {\n  MAX: getDateDaysAgo(1).string,\n  MIN: getDateDaysAgo(5).string\n}\nObject.freeze(TIME_RANGE)\n\nconst MediasForm = ({ filter, modifyFilter }) => {\n  const [startDate, setStartDate] = useState(`${filter.startDate.year}-${filter.startDate.month}-${filter.startDate.day}`)\n  const [endDate, setEndDate] = useState(`${filter.endDate.year}-${filter.endDate.month}-${filter.endDate.day}`)\n  const [category, setCategory] = useState(filter.category)\n\n  const handleChange = event => {\n    switch (event.target.id) {\n      case 'start-date':\n        setStartDate(event.target.value);\n        modifyFilter({\n          startDate: parseDateString(event.target.value)\n        })\n        break\n      case 'end-date':\n        setEndDate(event.target.value);\n        modifyFilter({\n          endDate: parseDateString(event.target.value)\n        });\n        break\n      case 'category':\n        setCategory(event.target.value)\n        modifyFilter({\n          category: event.target.value\n        })\n        break\n      default:\n        break\n    }\n  }\n\n  return (\n    <form className=\"image-form\">\n      <div className=\"input-wrapper\">\n        <label htmlFor=\"start-date\">\n          Date from:\n          <input type=\"date\" onChange={handleChange} value={startDate} id=\"start-date\" name=\"start-date\" min={TIME_RANGE.MIN} max={endDate} />\n        </label>\n      </div>\n\n      <div className=\"input-wrapper\">\n        <label htmlFor=\"end-date\">\n          Date to:\n          <input type=\"date\" onChange={handleChange} value={endDate} id=\"end-date\" name=\"end-date\" min={startDate} max={TIME_RANGE.MAX} />\n        </label>\n      </div>\n\n      <div className=\"select-wrapper\">\n        <select onChange={handleChange} id=\"category\" value={category}>\n          <option key=\"all\">All</option>\n          {CATEGORIES.map((category, index) => <option key={index}>{category.name}</option>)}\n        </select>\n      </div>\n    </form>\n  );\n};\n\nMediasForm.propTypes = {\n  filter: PropTypes.object.isRequired,\n  modifyFilter: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({\n  filter: state.mediasFilter\n})\n\nconst mapDispatchToProps = dispatch => ({\n  modifyFilter: filter =>\n    dispatch(\n      modifyFilter(filter)\n    )\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MediasForm)\n","import {\n  ADD_MEDIAS_INFO,\n  MODIFY_FILTER\n} from './types'\n\nexport const addMediasInfo = mediasInfo => ({\n  type: ADD_MEDIAS_INFO,\n  mediasInfo\n})\n\nexport const modifyFilter = filter => ({\n  type: MODIFY_FILTER,\n  filter\n})\n","import React from 'react'\n\nimport '../css/Loader.css';\n\nconst Loader = () =>\n  <div className=\"loadingio-spinner-eclipse-w9sa0m5m9bl\">\n    <div className=\"ldio-v8jc0562qmk\">\n      <div />\n    </div>\n  </div>\n\nexport default Loader\n","import React, { useEffect, useRef, useState, useCallback } from 'react'\nimport PropTypes from 'prop-types'\n\nimport '../css/Media.css'\n\nimport Loader from './Loader'\n\nconst Media = ({\n  media,\n  media: {\n    category,\n    url,\n    mediaType,\n    title\n  },\n  onClick\n}) => {\n  const mediaRef = useRef(null)\n  \n  const [loading, setLoading] = useState(true)\n\n  const mediaLoaded = useCallback(() => {\n    setLoading(false)\n  }, [setLoading])\n\n  useEffect(() => {\n    const mediaElement = mediaRef.current\n    mediaElement.addEventListener('load', mediaLoaded)\n    return () => mediaElement.removeEventListener('load', mediaLoaded)\n  }, [mediaLoaded])\n\n  useEffect(() => {\n    if (!loading)\n      mediaRef.current.style.opacity = 1\n  }, [loading])\n\n  const mediaElement = mediaType === 'video' ?\n    <iframe src={url} className=\"media\" ref={mediaRef} alt={category.name} title={title.name}/> :\n    <img src={url} className=\"media\" ref={mediaRef} alt={category.name}/>\n  \n  return (\n    <div className=\"media-wrapper\" onClick={() => onClick(media)}>\n      {loading && <Loader/>}\n      {mediaElement}\n    </div>\n  )\n};\n\nMedia.propTypes = {\n  media: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired,\n}\n\nexport default Media\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\n\nimport '../css/MediasList.css'\n\nimport { isFirstDateSmaller } from '../utility/date'\n\nimport Media from './Media'\n\nconst filterMedias = (mediasInfo, filter) => {\n  return mediasInfo.filter(mediaInfo => {\n    if (filter.category !== 'All' && filter.category !== mediaInfo.category.name) return false\n    if (isFirstDateSmaller(mediaInfo.date, filter.startDate)\n      || isFirstDateSmaller(filter.endDate, mediaInfo.date)) return false\n\n    return true\n  })\n}\n\nconst MediasList = ({ medias: { mediasInfo }, filter, setMedia }) => {\n  const [filteredMedias, setFilteredMedias] = useState([])\n\n  useEffect(() => {\n    setFilteredMedias(filterMedias(mediasInfo, filter))\n  }, [mediasInfo, filter])\n\n  const onClick = media => setMedia(media)\n\n  return (\n    <div className=\"image-board\">\n      <span/>\n      <span/>\n      <span/>\n      <span/>\n      {filteredMedias.map(media => <Media key={media.url} media={media} onClick={onClick}/>)}\n    </div>\n  )\n}\n\nMediasList.propTypes = {\n  medias: PropTypes.object.isRequired,\n  filter: PropTypes.object.isRequired,\n  setMedia: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({\n  medias: state.medias,\n  filter: state.mediasFilter\n})\n\nexport default connect(mapStateToProps)(MediasList)\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport '../css/Logo.css'\n\nconst Logo = ({ headline }) => {\n  return (\n    <div className=\"logo\">\n      <span className=\"nasa-logo\">Nasa</span>\n      <span className=\"apod-logo\">\n        <span className=\"dash\">&nbsp;-&nbsp;</span>\n        {headline}\n      </span>\n    </div>\n  )\n}\n\nLogo.propTypes = {\n  headline: PropTypes.string.isRequired,\n}\n\nexport default Logo\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport '../css/MediaInfo.css';\nimport '../css/Loader.css';\n\nimport Media from './Media'\nimport Logo from './Logo'\n\nconst MediaInfo = ({\n  media,\n  media: {\n    category,\n    title,\n    date,\n    explanation\n  },\n  setMedia\n}) => {\n  useEffect(() => {\n    setTimeout(() => window.scrollTo(0, 0), 100)\n  }, [])\n\n  const titleContainer = (\n    <div className=\"media-info-title-wrapper\">\n      <span>Earth Polychromatic</span>\n      <span className=\"space\">&nbsp;</span>\n      <span>Imaging Camera</span>\n    </div>\n  );\n\n  return (\n    <div className=\"info-container\">\n      <Logo headline={category.name === 'Earth Polychromatic Imaging Camera' ? titleContainer : category.name}/>\n      <div className=\"info-wrapper\">\n        <span />\n        <span />\n        <span />\n        <span />\n        <div className=\"media-info-media-wrapper\">\n          <Media media={media} onClick={() => {}}/>\n        </div>\n        <div className=\"title\">{title.name}</div>\n        <div className=\"date\">{date.string}</div>\n        <div className=\"explanation\">{explanation}</div>\n        <button type=\"button\" onClick={() => setMedia(null)}>Main Page</button>\n      </div>\n    </div>\n  )\n};\n\nMediaInfo.propTypes = {\n  media: PropTypes.object.isRequired,\n  setMedia: PropTypes.func.isRequired,\n};\n\nexport default MediaInfo\n","import { getDateDaysAgo } from './date';\n\nconst fetchMediasInfo = (addMediasInfo) => {\n  const CATEGORIES = [\n    { name: 'A Picture of the Day', url: 'a-picture-of-the-day' },\n    { name: 'Mars Rover Photos', url: 'mars-rover-photos' },\n    { name: 'Earth Polychromatic Imaging Camera', url: 'earth-polychromatic-imaging-camera' }\n  ]\n  const apiKey = 'pTCOGdr0OJfLMQb6wfV9coKMqH3e3BZ8yOFXszLv'\n  const promises = []\n  const mediasInfo = []\n\n  for (let i = 0; i < CATEGORIES.length; i += 1) {\n    for (let j = 5; j > 0; j -= 1) {\n      const queryDate = getDateDaysAgo(j)\n      let url\n\n      switch (CATEGORIES[i].name) {\n        case 'A Picture of the Day':\n          url = `https://api.nasa.gov/planetary/apod?date=${queryDate.string}&api_key=${apiKey}`\n          break\n        case 'Mars Rover Photos':\n          url = `https://api.nasa.gov/mars-photos/api/v1/rovers/curiosity/photos?earth_date=${queryDate.string}&page=1&api_key=${apiKey}`\n          break\n        case 'Earth Polychromatic Imaging Camera':\n          url = `https://api.nasa.gov/EPIC/api/natural/date/${queryDate.string}?api_key=${apiKey}`\n          break\n        default:\n          break\n      }\n\n      const promise = fetch(url).then(response => response.json())\n        .then(json => {\n          switch (CATEGORIES[i].name) {\n            case 'A Picture of the Day':\n              mediasInfo.push({\n                id: mediasInfo.length.toString(),\n                date: queryDate,\n                explanation: json.explanation,\n                title: {\n                  name: json.title,\n                  url: json.title.replace(/ /g, '-').toLowerCase(),\n                },\n                url: json.url,\n                category: CATEGORIES[i],\n                mediaType: json.media_type\n              })\n            \n              break\n            case 'Mars Rover Photos': {\n                if (json.photos.length === 0) break\n\n                const index = Math.floor(Math.random() * json.photos.length)\n\n                mediasInfo.push({\n                  id: mediasInfo.length.toString(),\n                  date: queryDate,\n                  explanation: json.photos[index].camera.full_name,\n                  title: {\n                    name: json.photos[index].rover.name,\n                    url: `${json.photos[index].rover.name.replace(/ /g, '-').toLowerCase()}-${mediasInfo.length}`,\n                  },\n                  url: json.photos[index].img_src,\n                  category: CATEGORIES[i],\n                  mediaType: 'image'\n                })\n              }\n\n              break\n            case 'Earth Polychromatic Imaging Camera': {\n                if (json.length === 0) break\n\n                const index = Math.floor(Math.random() * json.length)\n\n                mediasInfo.push({\n                  id: mediasInfo.length.toString(),\n                  date: queryDate,\n                  explanation: json.caption,\n                  title: {\n                    name: 'Mother Earth',\n                    url: `mother-earth-${mediasInfo.length}`,\n                  },\n                  url: `https://epic.gsfc.nasa.gov/archive/natural/${queryDate.yearString}/${queryDate.monthString}/${queryDate.dayString}/jpg/${json[index].image}.jpg`,\n                  category: CATEGORIES[i],\n                  mediaType: 'image'\n                })\n              }\n\n              break\n            default:\n              break\n          }\n        })\n        .catch(error => console.error(error))\n\n      promises.push(promise)\n    }\n  }\n\n  Promise.all(promises).then(() => addMediasInfo(mediasInfo))\n}\n\nexport default fetchMediasInfo","import React, { useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\nimport './css/reset.css'\nimport './css/App.css'\n\nimport MediasForm from './components/MediasForm'\nimport MediasList from './components/MediasList'\nimport MediaInfo from './components/MediaInfo'\nimport Logo from './components/Logo'\nimport Loader from './components/Loader'\n\nimport { addMediasInfo } from './actions/medias'\nimport fetchMediasInfo from './utility/fetchMedias'\n\nconst App = ({ medias: { loading }, addMediasInfo }) => {\n  const [media, setMedia] = useState(null)\n\n  useEffect(() => {\n    if (loading)\n      fetchMediasInfo(addMediasInfo)\n  }, [loading, addMediasInfo])\n\n  return (\n    <>\n      {loading ? <Loader/> :\n        <div className=\"app\">\n          {media ? <MediaInfo media={media} setMedia={setMedia}/> :\n            <>          \n              <Logo headline={'A Picture of the Day'}/>\n              <MediasForm/>\n              <MediasList setMedia={setMedia}/>\n            </>\n          }\n        </div>\n      }\n    </>\n  )\n}\n\nApp.propTypes = {\n  medias: PropTypes.object.isRequired,\n  addMediasInfo: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({\n  medias: state.medias\n})\n\nconst mapDispatchToProps = dispatch => ({\n  addMediasInfo: state => {\n    dispatch(\n      addMediasInfo(state)\n    )\n  }\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\n\nimport rootReducer from './reducers/index';\n\nimport App from './App';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App/>\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}